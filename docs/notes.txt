boundary is an array of two elements; each element can be 0, 1 or -1.
if we have a boundary {-1, 1} it means that we can't go in the "opposite direction of the x axis" (not on left)
and we can't go in the direction of the y axis (not down).
sum up: the first element of the vector tells us which direction on x we can't follow in that cell and
the second element tells us which direction on y we can't follow. If one of the element is 0 it means that
we have no boundary in that direction

conventions followed:
0,0 is the top left corner
x grows to the right
y grows to the bottom
arrays are 0 based
multidimensional arrays are fortran style (first index is the most rapidly varying) (column major)

CUDA:
we use a 2D grid of blocks, each block is a 2D grid of threads
each thread is responsible for a cell of the grid
lattice size better be a multiple of 32x32
matrices are stored in row major order, C like!
f (distribution function) memory layout example:
[f0(0,0), f1(0,0)... f0(0,1), f1(0,1)... f0(0,2), f1(0,2)... f8(nx, ny)]
boundary on gpu is 0, 1, 2, 3, 4, 5, 6, 7, 8, following the same convention as the streaming directions
